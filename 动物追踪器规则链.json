{
  "ruleChain": {
    "name": "动物追踪器-规则链-v1-kafka增强版",
    "type": "CORE",
    "firstRuleNodeId": null,
    "root": false,
    "debugMode": true,
    "configuration": null,
    "additionalInfo": {
      "description": "支持解码、存储、Kafka统一转发的动物追踪器规则链"
    }
  },
  "metadata": {
    "version": 3,
    "firstNodeIndex": 0,
    "nodes": [
      {
        "type": "org.thingsboard.rule.engine.profile.TbDeviceProfileNode",
        "name": "Device Profile Node",
        "debugMode": true,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 1,
        "configuration": {
          "persistAlarmRulesState": false,
          "fetchAlarmRulesStateOnStart": false
        },
        "additionalInfo": {
          "layoutX": 180,
          "layoutY": 300
        }
      },
      {
        "type": "org.thingsboard.rule.engine.filter.TbMsgTypeSwitchNode",
        "name": "Message Type Switch",
        "debugMode": true,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 0,
        "configuration": {
          "version": 0
        },
        "additionalInfo": {
          "layoutX": 390,
          "layoutY": 460
        }
      },
      {
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Base64 to Hex",
        "debugMode": true,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 0,
        "configuration": {
          "scriptLang": "JS",
          "jsScript": "function base64decode(e){var r,a,c,h,o,t,d,base64DecodeChars=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-1,-1,-1,-1,-1];for(t=e.length,o=0,d='';o<t;){do{r=base64DecodeChars[255&e.charCodeAt(o++)]}while(o<t&&-1==r);if(-1==r)break;do{a=base64DecodeChars[255&e.charCodeAt(o++)]}while(o<t&&-1==a);if(-1==a)break;d+=String.fromCharCode(r<<2|(48&a)>>4);do{if(61==(c=255&e.charCodeAt(o++)))return d;c=base64DecodeChars[c]}while(o<t&&-1==c);if(-1==c)break;d+=String.fromCharCode((15&a)<<4|(60&c)>>2);do{if(61==(h=255&e.charCodeAt(o++)))return d;h=base64DecodeChars[h]}while(o<t&&-1==h);if(-1==h)break;d+=String.fromCharCode((3&c)<<6|h)}return d}function base64ToHex(r){for(var e=base64decode(r.replace(/[ \\r\\n]+$/,\"\")),o=0,a=[];o<e.length;++o){var t=e.charCodeAt(o).toString(16);1===t.length&&(t=\"0\"+t),a[a.length]=t}return a.join(\"\")}if(msg.data){msg.dataHex=base64ToHex(msg.data)}return{msg:msg,metadata:metadata,msgType:msgType};"
        },
        "additionalInfo": {
          "layoutX": 470,
          "layoutY": 180
        }
      },
      {
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "动物追踪器解码器",
        "debugMode": true,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 0,
        "configuration": {
          "scriptLang": "JS",
          "jsScript": "function hexToBytes(hex){if(!hex)return[];var bytes=[];for(var i=0;i<hex.length;i+=2){bytes.push(parseInt(hex.substr(i,2),16))}return bytes}function decodeUplink(input){var bytes=hexToBytes(input.msg.dataHex);var decoded={};if(!(bytes&&bytes.length>4&&bytes[0]===0x68&&bytes[1]===0x6B&&bytes[2]===0x74)){return null}var i=5;while(i<bytes.length){var type=bytes[i++];switch(type){case 0x01:decoded.hard_ver=bytes[i++];decoded.soft_ver=bytes[i++];break;case 0x03:decoded.battery=bytes[i++];break;case 0x09:var val=(bytes[i]<<16)|(bytes[i+1]<<8)|bytes[i+2];if(val&0x800000)val|=0xFF000000;decoded.temperature=val/1000;i+=3;break;case 0x0A:var hum=(bytes[i]<<16)|(bytes[i+1]<<8)|bytes[i+2];decoded.humidity=hum/1000;i+=3;break;case 0x10:decoded.latitude=((bytes[i]<<24)|(bytes[i+1]<<16)|(bytes[i+2]<<8)|bytes[i+3])/1000000;i+=4;break;case 0x11:decoded.longitude=((bytes[i]<<24)|(bytes[i+1]<<16)|(bytes[i+2]<<8)|bytes[i+3])/1000000;i+=4;break;case 0x15:decoded.step=(bytes[i]<<8)|bytes[i+1];i+=2;break;case 0x39:decoded.work_mode=bytes[i++];decoded.report_interval_time1=(bytes[i]<<8)|bytes[i+1];i+=2;decoded.start_hour_time1=bytes[i++];decoded.start_min_time1=bytes[i++];decoded.end_hour_time1=bytes[i++];decoded.end_min_time1=bytes[i++];decoded.report_interval_time2=(bytes[i]<<8)|bytes[i+1];i+=2;decoded.start_hour_time2=bytes[i++];decoded.start_min_time2=bytes[i++];decoded.end_hour_time2=bytes[i++];decoded.end_min_time2=bytes[i++];decoded.idle_interval=(bytes[i]<<8)|bytes[i+1];i+=2;break;case 0x84:decoded.tamper_alarm=bytes[i++];break;default:i=bytes.length;break}}input.msg.result=decoded;return input}var output=decodeUplink({msg:msg,metadata:metadata,msgType:msgType});return output?{msg:output.msg,metadata:output.metadata,msgType:output.msgType}:{msg:msg,metadata:metadata,msgType:msgType};"
        },
        "additionalInfo": {
          "layoutX": 680,
          "layoutY": 180
        }
      },
      {
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "过滤解码失败的数据",
        "debugMode": true,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 0,
        "configuration": {
          "scriptLang": "JS",
          "jsScript": "return !!msg.result && Object.keys(msg.result).length > 0;"
        },
        "additionalInfo": {
          "layoutX": 910,
          "layoutY": 120
        }
      },
      {
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "提取遥测和属性",
        "debugMode": true,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 0,
        "configuration": {
          "scriptLang": "JS",
          "jsScript": "return {msg: msg.result, metadata: metadata, msgType: msgType};"
        },
        "additionalInfo": {
          "layoutX": 1020,
          "layoutY": 220
        }
      },
      {
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode",
        "name": "Save Timeseries",
        "debugMode": true,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 0,
        "configuration": {
          "defaultTTL": 0,
          "skipLatestPersistence": false,
          "useServerTs": true
        },
        "additionalInfo": {
          "layoutX": 1260,
          "layoutY": 200
        }
      },
      {
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "Save Client Attributes",
        "debugMode": true,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 2,
        "configuration": {
          "scope": "CLIENT_SCOPE",
          "notifyDevice": false,
          "sendAttributesUpdatedNotification": false,
          "updateAttributesOnlyOnValueChange": true
        },
        "additionalInfo": {
          "layoutX": 1140,
          "layoutY": 480
        }
      },
      {
        "type": "org.thingsboard.rule.engine.metadata.TbGetTenantDetailsNode",
        "name": "添加租户id",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 1,
        "configuration": {
          "detailsList": ["ID"],
          "fetchTo": "METADATA"
        },
        "additionalInfo": {
          "layoutX": 1100,
          "layoutY": 100
        }
      },
      {
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "构建Kafka消息推送数据",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 0,
        "configuration": {
          "scriptLang": "JS",
          "jsScript": "return { msg: { deviceName: metadata.deviceName, ts: metadata.ts, data: msg }, metadata: metadata, msgType: msgType };"
        },
        "additionalInfo": {
          "layoutX": 1220,
          "layoutY": 100
        }
      },
      {
        "type": "org.thingsboard.rule.engine.kafka.TbKafkaNode",
        "name": "消息推送",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 0,
        "configuration": {
          "topicPattern": "telemetry_${tenant_id}",
          "keyPattern": null,
          "bootstrapServers": "172.22.2.122:9092,172.22.2.122:9093",
          "retries": 0,
          "batchSize": 16384,
          "linger": 0,
          "bufferMemory": 33554432,
          "acks": "-1",
          "keySerializer": "org.apache.kafka.common.serialization.StringSerializer",
          "valueSerializer": "org.apache.kafka.common.serialization.StringSerializer",
          "otherProperties": {},
          "addMetadataKeyValuesAsKafkaHeaders": false,
          "kafkaHeadersCharset": "UTF-8"
        },
        "additionalInfo": {
          "layoutX": 1340,
          "layoutY": 100
        }
      }
    ],
    "connections": [
      { "fromIndex": 0, "toIndex": 1, "type": "Success" },
      { "fromIndex": 1, "toIndex": 2, "type": "Post telemetry" },
      { "fromIndex": 1, "toIndex": 7, "type": "Post attributes" },
      { "fromIndex": 2, "toIndex": 3, "type": "Success" },
      { "fromIndex": 3, "toIndex": 4, "type": "Success" },
      { "fromIndex": 4, "toIndex": 5, "type": "True" },
      { "fromIndex": 5, "toIndex": 6, "type": "Success" },
      { "fromIndex": 5, "toIndex": 7, "type": "Success" },
      { "fromIndex": 5, "toIndex": 8, "type": "Success" },
      { "fromIndex": 8, "toIndex": 9, "type": "Success" },
      { "fromIndex": 9, "toIndex": 10, "type": "Success" }
    ],
    "ruleChainConnections": null
  }
}



curl -v -X POST http://172.22.3.105:8080/api/v1/486mHdCF4uyL6IpUzJ91/telemetry --header Content-Type:application/json --data "{temperature:25}"